<!---this page catches exceptions from the cferror tag in the application.cfm.  It outputs what content was generated, an error message, and then records the error to the database.--->
<cfmodule template="#application.appPath#/header.cfm">
<CFOUTPUT>
	<H3>This is an error.</h3>
	<DL>
		<DT><B>Browser type:</b></DT>
			<DD>#Error.Browser#</DD>
		<DT><B>The error occurred processing:</b></DT>
			<DD>#Error.Template#</DD>
			<!---the precise location of the error--->
			<cfif isDefined("session.accesslevel")>
				<cfif isDefined("Error.tagContext") AND session.accesslevel gt 0>
					<cfif isArray(Error.tagContext)>
						<cfloop array="#Error.tagContext#" index="i">
							<dd style="font-size: smaller;">#i["template"]# : line #i["line"]#</dd>
						</cfloop>
					</cfif>
				</cfif>
			</cfif>
		<DT><B>General Diagnostic information:</b></DT>
			<DD>#Error.Diagnostics#</DD>
	</dl>
	
	<HR>
	<p>generated by req-error.cfm</p>
</cfoutput>

<!---now try to record the error to the pie_errors datasource--->
<cfset errorJSON = SerializeJSON(Error)>
<cfset formJSON = serializeJSON(form)>
<cfset urlJSON = serializeJSON(url)>

<cfquery datasource="pie_errors" name="storeErrors">
	INSERT INTO tbl_errors (application_name, username, page, referer, error_json, form_json, url_json, ts)
	VALUES (
		<cfqueryparam cfsqltype="cf_sql_varchar" value="#application.applicationName#">,
		
		<cfif isDefined("session.cas_username")>
			<cfqueryparam cfsqltype="cf_sql_varchar" value="#session.cas_username#">,
		<cfelse>
			NULL,
		</cfif>
		
		<cfif isDefined("Error.Template")>
			<cfqueryparam cfsqltype="cf_sql_varchar" value="#Error.Template#">,
		<cfelse>
			NULL,
		</cfif>
		
		<cfif isDefined("Error.HTTPReferer")>
			<cfqueryparam cfsqltype="cf_sql_varchar" value="#Error.HTTPReferer#">,
		<cfelse>
			NULL,
		</cfif>
		
		<cfqueryparam cfsqltype="cf_sql_longvarchar" value="#errorJSON#">,
		<cfqueryparam cfsqltype="cf_sql_longvarchar" value="#formJSON#">,
		<cfqueryparam cfsqltype="cf_sql_longvarchar" value="#urlJSON#">,
		
		<cfif isDefined("Error.DateTime")>
			<cfqueryparam cfsqltype="cf_sql_timestamp" value="#Error.DateTime#">
		<cfelse>
			GETDATE()
		</cfif>
	)
</cfquery>
<p>This error has been recorded to the database for further analysis.</p>
